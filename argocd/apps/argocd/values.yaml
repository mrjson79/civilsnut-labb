nameOverride: argocd
fullnameOverride: ""
namespaceOverride: ""
kubeVersionOverride: ""
apiVersionOverrides: {}
createAggregateRoles: false
createClusterRoles: true

openshift:
  enabled: false

crds:
  install: true
  keep: true
  annotations: {}
  additionalLabels: {}

global:
  domain: argocd.civilsnut.se
  runtimeClassName: ""
  additionalLabels: {}
  revisionHistoryLimit: 3
  image:
    repository: quay.io/argoproj/argocd
    tag: ""
    imagePullPolicy: IfNotPresent
  imagePullSecrets: []
  logging:
    format: text
    level: info
  statefulsetAnnotations: {}
  deploymentAnnotations: {}
  podAnnotations: {}
  podLabels: {}
  addPrometheusAnnotations: true
  securityContext: {}
  hostAliases: []

configs:
  cm:
    create: true
  params:
    create: true
    server.insecure: true
    server.disable.auth: false
    server.grpc.web: true
  rbac:
    create: true
  ssh:
    create: true
  tls:
    annotations: {}
  repositories: {}

extraObjects: []

controller:
  name: application-controller
  resources: {}
  metrics:
    enabled: true

dex:
  enabled: true
  name: dex-server
  podAnnotations: {}
  podLabels: {}

redis:
  enabled: true
  name: redis
  metrics:
    enabled: true

redis-ha:
  enabled: false

redisSecretInit:
  enabled: true
  name: redis-secret-init

server:
  name: server
  extensions:
    enabled: false
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
  certificateSecret:
    enabled: false
    annotations: {}
  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    servicePortHttp: 80
    servicePortHttps: 443
    servicePortHttpName: http
    servicePortHttpsName: https
    loadBalancerClass: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalIPs: []
    externalTrafficPolicy: Cluster
    sessionAffinity: None
  metrics:
    enabled: true
  ingress:
    enabled: false

repoServer:
  name: repo-server
  initContainers: []
  volumeMounts: []
  metrics:
    enabled: true
  certificateSecret:
    enabled: false

applicationSet:
  name: applicationset-controller
  serviceAccount:
    create: true
    name: argocd-applicationset-controller
  certificate:
    enabled: false
  metrics:
    enabled: true

metrics:
  serviceMonitor:
    enabled: true
    namespace: monitoring
    labels:
      release: kube-prometheus-stack
    interval: 30s
    scrapeTimeout: 10s
notifications:
  enabled: true
  metrics:
    enabled: true
    port: 9001
  templates: {}
  triggers: {}
