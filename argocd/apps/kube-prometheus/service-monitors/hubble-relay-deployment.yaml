apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hubble-relay
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hubble-relay
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-relay
subjects:
  - kind: ServiceAccount
    name: hubble-relay
    namespace: kube-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      serviceAccountName: hubble-relay
      containers:
        - name: hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.5
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
            - --listen-address=0.0.0.0:4245
            - --hubble-socket-path=/var/run/cilium/hubble.sock
            - --cluster-name=default
            - --insecure
            - --dial-timeout=5s
            - --retry-timeout=30s
            - --sort-buffer-len-max=262144
            - --sort-buffer-drain-timeout=1s
            - --metrics-listen-address=0.0.0.0:9966
          ports:
            - name: grpc
              containerPort: 4245
              protocol: TCP
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 4245
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4245
            initialDelaySeconds: 3
            periodSeconds: 30
          volumeMounts:
            - name: hubble-sock-dir
              mountPath: /var/run/cilium
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
          env:
            - name: HUBBLE_SERVER
              value: "unix:///var/run/cilium/hubble.sock"
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      tolerations:
        - operator: Exists
      volumes:
        - name: hubble-sock-dir
          hostPath:
            path: /var/run/cilium
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9966"
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
    - name: grpc
      port: 80
      protocol: TCP
      targetPort: grpc
    - name: prometheus
      port: 9966
      protocol: TCP
      targetPort: prometheus
