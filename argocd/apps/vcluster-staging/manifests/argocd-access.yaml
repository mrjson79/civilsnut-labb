apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  namespace: default
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/component: service-account
    app.kubernetes.io/managed-by: argocd
    environment: staging
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/component: cluster-role
    app.kubernetes.io/managed-by: argocd
    environment: staging
  annotations:
    argocd.argoproj.io/sync-wave: "2"
rules:
  # Core API resources
  - apiGroups: [""]
    resources:
      - configmaps
      - endpoints
      - events
      - namespaces
      - pods
      - pods/log
      - secrets
      - services
      - serviceaccounts
      - persistentvolumeclaims
      - persistentvolumes
    verbs: ["*"]

  # Apps API resources
  - apiGroups: ["apps"]
    resources:
      - deployments
      - replicasets
      - statefulsets
      - daemonsets
    verbs: ["*"]

  # Extensions API resources
  - apiGroups: ["extensions"]
    resources:
      - deployments
      - ingresses
      - networkpolicies
    verbs: ["*"]

  # Networking API resources
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
      - networkpolicies
    verbs: ["*"]

  # RBAC API resources
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources:
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
    verbs: ["*"]

  # Batch API resources
  - apiGroups: ["batch"]
    resources:
      - jobs
      - cronjobs
    verbs: ["*"]

  # Autoscaling API resources
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["*"]

  # Policy API resources
  - apiGroups: ["policy"]
    resources:
      - poddisruptionbudgets
    verbs: ["*"]

  # Metrics API resources
  - apiGroups: ["metrics.k8s.io"]
    resources:
      - pods
      - nodes
    verbs: ["get", "list"]

  # Custom Resource Definitions
  - apiGroups: ["apiextensions.k8s.io"]
    resources:
      - customresourcedefinitions
    verbs: ["get", "list", "watch"]

  # Node access for scheduling info
  - apiGroups: [""]
    resources:
      - nodes
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-server
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/component: cluster-role-binding
    app.kubernetes.io/managed-by: argocd
    environment: staging
  annotations:
    argocd.argoproj.io/sync-wave: "3"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-server
subjects:
  - kind: ServiceAccount
    name: argocd-server
    namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-server-token
  namespace: default
  labels:
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/component: service-account-token
    app.kubernetes.io/managed-by: argocd
    environment: staging
  annotations:
    kubernetes.io/service-account.name: argocd-server
    argocd.argoproj.io/sync-wave: "4"
type: kubernetes.io/service-account-token
